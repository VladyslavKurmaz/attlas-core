{
  "env": {
  },
  "stages":{
    "prereq":{
      "shell":[
        "envsubst > sonar-project.properties < sonar-project.properties.template",
        "envsubst > .env < .env.template",
        "npm i"
      ]
    },
    "build":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "ng build"
      ]
    },
    "test":{
      "shell":[
        "ng test --code-coverage"
      ]
    },
    "lint":{
      "shell":[
        "ng lint --format=prose --type-check=true"
      ]
    },
    "build-prod":{
      "shell":[
        "ng build --prod --env=prod"
      ]
    },
    "build-mobile":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "export PROJECT_PARAM_AUTH_HOST=$(ipconfig getifaddr en0)",
        "envsubst < src/environments/consts.ts.template > src/environments/consts.ts",
        "ng build --prod --env=prod --base-href . --output-path ../../mobile/cordova/www/",
        "sed -i -e \"s|</app-root>|$(cat ./cordova.patch)|g\" ../../mobile/cordova/www/index.html"
      ]
    },
    "serve":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "export PROJECT_PARAM_HOST=$(ipconfig getifaddr en0)",
        "envsubst < src/environments/consts.ts.template > src/environments/consts.ts",
        "ng server --host=${PROJECT_PARAM_LSTN} --port=${PROJECT_PARAM_PORT}"
      ]
    },
    "sonar":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "envsubst < sonar-project.properties.template > sonar-project.properties",
        "#~/projects/sonar-scanner-3.0.3.778/bin/sonar-scanner -X",
        "sonar-scanner"
      ]
    },
    "docker-build":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker build --build-arg PROJECT_PARAM_HOST=$PROJECT_PARAM_HOST \\",
        "             --build-arg PROJECT_PARAM_LSTN=$PROJECT_PARAM_LSTN \\",
        "             --build-arg PROJECT_PARAM_PORT=$PROJECT_PARAM_PORT \\",
        "             --build-arg PROJECT_PARAM_PORTS=$PROJECT_PARAM_PORTS \\",
        "             -t ${PROJECT_KEY}:${PROJECT_VERSION} ."
      ]
    },
    "docker-run":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker run -d --rm -p $PROJECT_PARAM_PORT:80 -p $PROJECT_PARAM_PORTS:443 --name ${PROJECT_KEY} ${PROJECT_KEY}:${PROJECT_VERSION}"
      ]
    },
    "docker-stop":{
      "shell":[
        "export $(cat ./.env | grep -v ^# | xargs)",
        "docker stop ${PROJECT_KEY}",
        "docker rmi ${PROJECT_KEY}:${PROJECT_VERSION}"
      ]
    }
  }
}